# This is a basic workflow to help you get started with Actions.

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest    
    
    env:
      lasttag: v.0.0.0
      HUGO_VERSION: 0.124.1
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the main repo under $GITHUB_WORKSPACE, so your job can access it
      - id: checkoutmain
        name: Checkout main repo
        uses: actions/checkout@v4
        with:
          path: main
          fetch-depth: 0 #this is needed to fetch all the tags
      # Checks-out external repo under $GITHUB_WORKSPACE, so your job can access it
      - id: checkoutremote
        name: Checkout remote repo
        uses: actions/checkout@v4
        with:
          path: website
          repository: ${{ secrets.MAIN_REPO_URI }}
          ref: 'master'
          token: ${{ secrets.MAIN_REPO_TOKEN }}

      - id: getlatesttag
        name: Get last Tag
        run: |
          cd $GITHUB_WORKSPACE
          cd main
          lasttag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "lasttag=$lasttag" >> $GITHUB_ENV
          echo $lasttag
      
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Create Post with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd $GITHUB_WORKSPACE
          cd website
          fileName=release-${{ github.event.repository.name }}-$lasttag.md
          hugo \
            new posts/$fileName
            
     # - id: createnewpost
     #   name: Create new file in repo
     #   run: |
     #     echo "Creates a new file in repo or atleast tries to"
     #     cd $GITHUB_WORKSPACE
     #     cd website/content/posts
     #     date=$(date '+%Y-%m-%d')
     #     fileName=release-${{ github.event.repository.name }}-$lasttag.md
     #     touch $fileName
     #     ls
      - id: createchangelog
        name: Create Changelog
        run: |
          cd $GITHUB_WORKSPACE
          cd main
          #LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          #echo LAST_TAG=$LAST_TAG >> "$GITHUB_OUTPUT"
          echo $lasttag
          git log --no-merges --pretty=format:'%as [%an] - %s  <br>' $lasttag..HEAD > "changelog.txt"
          cp changelog.txt ../changelog.txt
          cd ..
          chmod 744 changelog.txt
          
      - id: createcontentpost
        name: Put content in file
        run: |
          cd $GITHUB_WORKSPACE
          cd website/content/posts
          date=$(date '+%Y-%m-%d')
          dateLong=$(date '+%Y-%m-%dT%H:%M:%S%z')
          fileName=release-${{ github.event.repository.name }}-$lasttag.md
          echo "Directory: "
          ls
          sed -i "4 s/true/false/g" $fileName
          #echo "---" > "$fileName"
          #echo "title: \"release ${{ github.event.repository.name }} $lasttag\" " >> "$fileName"
          #echo "date: $dateLong" >> "$fileName"
          #echo "draft: false" >> "$fileName"
          #echo "---" >> "$fileName"
          #echo "" >> "$fileName"
          echo "New release created today, the following was commited:" >> "$fileName"
          echo "" >> "$fileName"
          cat ../../../changelog.txt >> $fileName
          echo "" >> "$fileName"
          echo "" >> "$fileName"
          echo "<img src=\"https://raw.githubusercontent.com/neisep/guidgenerator/master/software.png\"/>" >> "$fileName"
          echo "" >> "$fileName"
          echo "${{ github.server_url }}/${{ github.repository }}" >> "$fileName"

      - uses: stefanzweifel/git-auto-commit-action@v5
        with: 
          commit_message: "update release from dummy"
          repository: website
